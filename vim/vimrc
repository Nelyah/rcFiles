execute pathogen#infect()
execute pathogen#helptags()

""""""""""""""""""""""""""""""""""""""""""
" Basic features
""""""""""""""""""""""""""""""""""""""""""

syntax on
set nocompatible
set incsearch           " search as characters are entered
set hlsearch            " highlight matches
set number              " line numbers"
set autoindent
set autoread            " reload automatically a file if not changed

" completion highlight
:highlight Pmenu guibg=brown gui=bold

" Tab spec
set tabstop=4
set expandtab
set shiftwidth=4

set ignorecase
set showmode            " Show the editing mode on last line
set t_Co=256
set encoding=utf-8

" Some remaps
noremap m l
noremap l k
noremap k j
noremap j h
noremap gV `[V`]


" YouCompleteMe config File
let g:ycm_global_ycm_extra_conf = '~/.vim/bundle/YouCompleteMe/third_party/ycmd/examples/.ycm_extra_conf.py'
let g:ycm_confirm_extra_conf = 0

" Tweaking the 'super' button
let mapleader = "\<Space>"
nnoremap <Leader>o :CtrlP<CR>
nnoremap <Leader>w :w<CR>
nmap <Leader><Leader> V
vmap v <Plug>(expand_region_expand)
vmap <C-v> <Plug>(expand_region_shrink)
" Turn off highlight after search
nnoremap <Leader>a :noh<return><CR>

" Stupid window...
map q: :q
autocmd CompleteDone * pclose

" Search and replace : I can use
" /something to search it, then cs to replace
" then <Esc>, then n.n. etc. for repeating
vnoremap <silent> s //e<C-r>=&selection=='exclusive'?'+1':''<CR><CR>
    \:<C-u>call histdel('search',-1)<Bar>let @/=histget('search',-1)<CR>gv
omap s :normal vs<CR>

" pops Tagbar
nmap <F8> :TagbarToggle<CR>

filetype plugin on
set backspace=indent,eol,start

autocmd VimEnter * WatchForChanges
let autoreadargs={'autoread':1} 
"execute WatchForChanges("*",autoreadargs) 

" Color scheme
colorscheme ir_black

" Maps Coquille commands to <F2> (Undo), <F3> (Next), <F4> (ToCursor)
au FileType coq call coquille#FNMapping()


"Python doc
nnoremap <buffer> K :<C-u>execute "!pydoc " . expand("<cword>")<CR>

"Python folding plugin : To be able to read doc
let g:SimpylFold_docstring_preview = 1

" vp doesn't replace paste buffer
function! RestoreRegister()
    let @" = s:restore_reg"
    return ''
endfunction
function! s:Repl()
    let s:restore_reg = @"
    return "p@=RestoreRegister()\<cr>"
endfunction
vmap <silent> <expr> p <sid>Repl()

" Using snipmate with YCM - not working yet
let g:UltiSnipsExpandTrigger="<c-j>"
let g:UltiSnipsJumpForwardTrigger="<c-j>"
let g:UltiSnipsJumpBackwardTrigger="<c-k>"
