#! /bin/bash

# Check for the OS used
OS=$(uname)

# check if the config_files have already been decrypted with the 
# login
if [[ -d conf_files_logins/ ]]
then
    CONFDIR=conf_files_logins
else
    CONFDIR=conf_files
fi

if [[ -f logins.gpg ]]
then
    read -p "The logins.gpg file is present, do you wish to decrypt it (password required)? [Yn] " -n 1 -r
    echo ""
    if [[ $REPLY =~ ^[Yy]$ ]]
    then
        ./decrypt_logins
        if [[ $? == 0 ]]
        then
            CONFDIR=conf_files_logins
        fi
    fi
fi

setup_bashrc () {
    case $OS in
    Linux)
        cp $CONFDIR/bashrc ${HOME}/.bashrc
        ;;
    Darwin)
        cp $CONFDIR/bashrc ${HOME}/.bash_profile
        ;;
    esac
}

setup_screenrc () {
    cp $CONFDIR/screenrc ${HOME}/.screenrc
}

setup_tmux () {
    cp $CONFDIR/tmux.conf ${HOME}/.tmux.conf
}

setup_gitconfig () {
    cp $CONFDIR/gitconfig ${HOME}/.gitconfig
}

setup_dircolors () {
    cp $CONFDIR/dircolors ${HOME}/.dircolors
}

setup_rcFiles () {
    echo -n "Setting up rc files..."
    setup_bashrc
    setup_screenrc
    setup_gitconfig
    setup_dircolors
    echo " Done."
}

vim_dein () {
    echo -n "Setting the color theme directory in vim..."
    mkdir -p ${HOME}/.vim/
    cp -r $CONFDIR/vim/colors/ ${HOME}/.vim/
    echo " Done."

    # Dein
    echo "Setting up dein plugin manager..."
    PLUGIN_DIR=${HOME}/.vim/dein/
    INSTALL_DIR="${PLUGIN_DIR}/repos/github.com/Shougo/dein.vim"

    # pull the plugin manager from github
    if [ -e "$INSTALL_DIR" ]; then
        echo "\"$INSTALL_DIR\" already exists!"
    else
        echo "Begin fetching dein..."
        mkdir -p "$PLUGIN_DIR"
        git clone https://github.com/Shougo/dein.vim "$INSTALL_DIR"
        echo "Done."
        echo ""
    fi

    # copy the vimrc file into our .vim/ directory
    cp $CONFDIR/vim/vimrc ${HOME}/.vim/

    # link the ~/.vim/vimrc to ~/.vimrc
    if [[ ! -L ${HOME}/.vimrc ]];
    then
        ln -s ${HOME}/.vim/vimrc ${HOME}/.vimrc
    fi

    # Begin plugin installation
    vim -c "call dein#install()|q"
    vim -c "call dein#update()|q"
}

build_vim() {
    echo "Setting up vim..."

    # check git command. Mandatory for the plugin manager
    if type git ;
    then
      : # You have git command. No Problem.
    else
      echo 'Please install git or update your path to include the git executable!'
      exit 1
    fi

    case $OS in
    Linux)
        if [[ $(whoami) == "root" ]];
        then
            sudo apt-get install libncurses5-dev libgnome2-dev libgnomeui-dev \
                    libgtk2.0-dev libatk1.0-dev libbonoboui2-dev \
                    libcairo2-dev libx11-dev libxpm-dev libxt-dev python-dev \
                    ruby-dev lua5.3 liblua5.3-dev liblua5.3-0 git

            sudo apt-get remove vim vim-runtime gvim
        fi

        if [[ -d vim/ ]];
        then
            cd vim/
            git pull
        else
            git clone https://github.com/vim/vim.git
            cd vim
        fi

        # If we aren't root, then let's hope that we have the right libraries
        # Else you may need to tweak these features
        ./configure --with-features=huge \
           --enable-multibyte \
           --enable-rubyinterp \
           --enable-pythoninterp \
           --with-python-config-dir=/usr/lib/python2.7/config \
           --enable-perlinterp \
           --enable-luainterp \
           --with-lua-prefix=/usr/include/lua5.3 \
           --enable-gui=gtk2 --enable-cscope --prefix=/usr
        make VIMRUNTIMEDIR=/usr/share/vim/vim80

        if [[ $(whoami) == "root" ]];
        then
           sudo make install

            sudo update-alternatives --install /usr/bin/editor editor /usr/bin/vim 1
            sudo update-alternatives --set editor /usr/bin/vim
            sudo update-alternatives --install /usr/bin/vi vi /usr/bin/vim 1
            sudo update-alternatives --set vi /usr/bin/vim
            cd $SETUP_DIR
        else
            echo "Please run the vim setup as root if you want to install it."
            echo ""
        fi
        cd $OLDPWD
    ;;
    esac
}

setup(){
    # VIM BUILD
    ##################
    read -p "Do you want to build vim from source (ubuntu only) or
            install/upgrade it with homebrew (OSX)? [yN] " -n 1 -r
    echo ""
    if [[ $REPLY =~ ^[Yy]$ ]]
    then
        VIM_BUILD=0
    else
        VIM_BUILD=1
        echo "Assuming vim installed."
    fi

    # VIM PLUGIN SETUP
    ##################
    read -p "Do you want to setup vim plugins? [yN] " -n 1 -r
    echo ""
    if [[ $REPLY =~ ^[Yy]$ ]]
    then
        VIM_PLUG=0
    else
        VIM_PLUG=1
    fi

    # RC FILES
    ##################
    read -p "Do you want to setup all rc files? (.bashrc, .dircolors, 
            screenrc, gitconfig)? [yN] " -n 1 -r
    echo ""
    if [[ $REPLY =~ ^[Yy]$ ]]
    then
        SETUP_RCFILES=0
    else
        SETUP_RCFILES=1
        # CHECK INDIVIDUALLY

        # BASH ENVIRONMENT
        ##################
        read -p "Do you want to setup bashrc and dircolors? [yN] " -n 1 -r
        echo ""
        if [[ $REPLY =~ ^[Yy]$ ]]
        then
            SETUP_BASHRC=0
        else
            SETUP_BASHRC=1
        fi

        # SCREEN ENVIRONMENT
        ##################
        read -p "Do you want to setup the screenrc file? [yN] " -n 1 -r
        echo ""
        if [[ $REPLY =~ ^[Yy]$ ]]
        then
            SETUP_SCREENRC=0
        else
            SETUP_SCREENRC=1
        fi

        read -p "Do you want to setup the tmux conf file? [yN] " -n 1 -r
        echo ""
        if [[ $REPLY =~ ^[Yy]$ ]]
        then
            SETUP_TMUX=0
        else
            SETUP_TMUX=1
        fi

        # SCREEN ENVIRONMENT
        ##################
        read -p "Do you want to setup the gitconfig file? [yN] " -n 1 -r
        echo ""
        if [[ $REPLY =~ ^[Yy]$ ]]
        then
            SETUP_GITCONFIG=0
        else
            SETUP_GITCONFIG=1
        fi
    fi


    # RC FILES
    ############################
    if [[ $SETUP_RCFILES == 0 ]]
    then
        setup_bashrc
        setup_screenrc
        setup_tmux
        setup_gitconfig
        setup_dircolors
    else
        if [[ $SETUP_BASHRC == 0 ]];
        then
            setup_bashrc
        fi

        if [[ $SETUP_SCREENRC == 0 ]];
        then
            setup_screenrc
        fi

        if [[ $SETUP_TMUX == 0 ]];
        then
            setup_tmux
        fi

        if [[ $SETUP_DIRCOLORS == 0 ]];
        then
            setup_dircolors
        fi

        if [[ $SETUP_GITCONFIG == 0 ]];
        then
            setup_gitconfig
        fi
    fi

    # VIM
    ###########################
    if [[ $VIM_BUILD == 0 ]]
    then
        build_vim
    fi

    if [[ $VIM_PLUG == 0 ]]
    then
        vim_dein
    fi
}

setup


