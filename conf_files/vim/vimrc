"dein Scripts-----------------------------
    set nocompatible               " Be iMproved


" Required:
set runtimepath+=@HOME@/.vim/dein//repos/github.com/Shougo/dein.vim
let g:dein#install_process_timeout = 300

" Required:
if dein#load_state(expand('~/.vim/dein'))
    call dein#begin(expand('~/.vim/dein'))                 " plugins' root path

" Let dein manage dein
" Required:
    call dein#add('Shougo/dein.vim')                       " Plugin manager
    call dein#add('Shougo/vimproc.vim', {'build': 'make'})
    call dein#add('Valloric/YouCompleteMe')                " auto completion
    call dein#add('Shougo/denite.nvim')                    " Yet another fuzzy finder

    call dein#add('vim-airline/vim-airline')               " line with useful infos
    call dein#add('vim-airline/vim-airline-themes')

    call dein#add('tpope/vim-commentary')                  " comments based on the file type
    call dein#add('airblade/vim-gitgutter')                " git info on the left
    call dein#add('the-lambda-church/coquille')            " For the CoQ proof
    call dein#add('kien/ctrlp.vim')                        " Fuzzy search for files in directory
    call dein#add('Raimondi/delimitMate')                  " For parenthesis
    call dein#add('PotatoesMaster/i3-vim-syntax')
    call dein#add('Yggdroot/indentLine')
    call dein#add('scrooloose/nerdtree')                   " File tree manager
    call dein#add('Xuyuanp/nerdtree-git-plugin')           " get vim info in nerdtree
    call dein#add('tmhedberg/SimpylFold')
    call dein#add('godlygeek/tabular')                     " Tabuliarise and align based on pattern
    call dein#add('ap/vim-css-color')                      " Color highlighter

    call dein#add('scrooloose/syntastic')
    " call dein#add('w0rp/ale') " lint checker

    call dein#add('tpope/vim-surround')
    call dein#add('tpope/vim-fugitive')
    call dein#add('majutsushi/tagbar')
    call dein#add('def-lkb/vimbufsync')
    call dein#add('terryma/vim-expand-region')
    call dein#add('xolox/vim-misc')
    call dein#add('terryma/vim-multiple-cursors')
    call dein#add('marcweber/vim-addon-mw-utils')
    call dein#add('tomtom/tlib_vim')
    call dein#add('garbas/vim-snipmate')
    call dein#add('majutsushi/tagbar')
    call dein#add('altercation/vim-colors-solarized')

    call dein#end()
    call dein#save_state()
endif

set hidden

syntax on
set t_Co=256 
set incsearch           " search as characters are entered
set hlsearch            " highlight matches
set number              " line numbers
set autoindent
set autoread            " reload automatically a file if not changed
set magic               " For regex


"""""""""""""""""""""""""""
" Basic VIM modifications "
"""""""""""""""""""""""""""

" mapping the 'super' button on space
let mapleader = "\<Space>"

" Tab spec
set tabstop=4
set expandtab
set shiftwidth=4

set ignorecase
set showmode            " Show the editing mode on last line
set encoding=utf-8


filetype on
filetype plugin on
set backspace=indent,eol,start

" Some remaps
noremap m l
noremap l k
noremap k j
noremap j h
noremap gV `[V`]

" Switching panes using the ctrl key
nnoremap <C-j> <C-w>h
nnoremap <C-k> <C-w>j
nnoremap <C-l> <C-w>k
nnoremap <C-m> <C-w>l


" Stupid window...
map q: :q

" Buffers 
""""""""""
" Move to the previous buffer with "gp"
nnoremap <Leader>j :bp<CR>
" Move to the next buffer with "gn"
nnoremap <Leader>m :bn<CR>
" List all possible buffers with "gl"
nnoremap gl :ls<CR>
" List all possible buffers with "gb" and accept a new buffer argument [1]
nnoremap gb :ls<CR>:b
" Close the current buffer and move to the previous one
" This replicates the idea of closing a tab
nmap <Leader>q :bp <BAR> bd #<CR>
""""""""
""""""""

" Save with space-w
nnoremap <Leader>w :w<CR>

" Color scheme
colorscheme ir_black
" let g:solarized_termcolors=256
" set background=dark
" colorscheme solarized

" completion highlight
highlight Pmenu ctermbg=4

"""""""""""""""""""""""""""
"""""""""""""""""""""""""""
"        PLUGINS          "
"""""""""""""""""""""""""""
"""""""""""""""""""""""""""

"""""""""""""""""""""""""""""""""
" ale plugin (syntax checking)
" Prevents from continuously checking for errors
" and eating up battery
"""""""""""""""""""""""""""""""""
" let g:ale_lint_on_text_changed = never


"""""""""""""""""""""""""""""""""
" Airline Plugin
"""""""""""""""""""""""""""""""""
let g:airline_theme = 'bubblegum'
let g:airline#extensions#tabline#enabled = 1
set laststatus=2

"""""""""""""""""""
" YOU COMPLETE ME "
"""""""""""""""""""
" config File
let g:ycm_global_ycm_extra_conf = '~/.vim/.ycm_extra_conf.py'
let g:ycm_python_binary_path = '/usr/bin/python3'
" let g:ycm_confirm_extra_conf = 0


" CtrlP plugin
nnoremap <Leader>o :CtrlP<CR>
nmap <Leader><Leader> V
vmap v <Plug>(expand_region_expand)
vmap <C-v> <Plug>(expand_region_shrink)
" Turn off highlight after search
nnoremap <Leader>a :noh<return><CR>

autocmd CompleteDone * pclose

"""""""""""""""""""""""""""""""""
" pops Tagbar
nmap <F8> :TagbarToggle<CR>

"autocmd VimEnter * WatchForChanges
"let autoreadargs={'autoread':1}
"execute WatchForChanges("*",autoreadargs)


"""""""""""""""""""""""""""""""""
" Maps Coquille commands to <F2> (Undo), <F3> (Next), <F4> (ToCursor)
au FileType coq call coquille#FNMapping()

"""""""""""""""""""""""""""""""""
"Python folding plugin : To be able to read doc
let g:SimpylFold_docstring_preview = 1

" Git plugin
"""""""""""""
set diffopt+=vertical

""""""""""""""""""""""""""""""""""
" Tabular
nmap <Leader>a= :Tabularize /=<CR>
vmap <Leader>a= :Tabularize /=<CR>

"""""""""""""""""""
" Useful function "
"""""""""""""""""""

" pasting doesn't replace paste buffer
function! RestoreRegister()
    let @" = s:restore_reg"
    return ''
endfunction
function! s:Repl()
    let s:restore_reg = @"
    return "p@=RestoreRegister()\<cr>"
endfunction
vmap <silent> <expr> p <sid>Repl()

" Using snipmate with YCM - not working yet
"let g:UltiSnipsExpandTrigger="<c-j>"
"let g:UltiSnipsJumpForwardTrigger="<c-j>"
"let g:UltiSnipsJumpBackwardTrigger="<c-k>"

"""""""""""""""""""""""""""
"""""""""""""""""""""""""""
