"dein Scripts-----------------------------
set nocompatible               " Be iMproved


" Required:
set runtimepath+=~/.vim/dein/repos/github.com/Shougo/dein.vim

" Required:
call dein#begin(expand('~/.vim/dein')) " plugins' root path

" Let dein manage dein
" Required:
call dein#add('Shougo/dein.vim')
call dein#add('Shougo/vimproc.vim', {'build': 'make'})
call dein#add('Valloric/YouCompleteMe')
call dein#add('Shougo/unite.vim')
call dein#add('vim-airline/vim-airline')
call dein#add('vim-airline/vim-airline-themes')
"call dein#add('Shougo/neosnippet.vim')
"call dein#add('Shougo/neosnippet-snippets')
call dein#add('the-lambda-church/coquille')
"call dein#add('kien/ctrlp.vim')
call dein#add('Raimondi/delimitMate')
call dein#add('PotatoesMaster/i3-vim-syntax')
call dein#add('Yggdroot/indentLine')
call dein#add('scrooloose/nerdtree')
call dein#add('tmhedberg/SimpylFold')
call dein#add('scrooloose/syntastic')
call dein#add('tpope/vim-surround')
call dein#add('tpope/vim-fugitive')
call dein#add('majutsushi/tagbar')
call dein#add('def-lkb/vimbufsync')
call dein#add('terryma/vim-expand-region')
call dein#add('xolox/vim-misc')
call dein#add('terryma/vim-multiple-cursors')
call dein#add('xolox/vim-notes')
call dein#add('marcweber/vim-addon-mw-utils')
call dein#add('tomtom/tlib_vim')
call dein#add('garbas/vim-snipmate')
call dein#add('majutsushi/tagbar')

" and a lot more plugins.....
"
call dein#end()

syntax on
"set nocompatible
set incsearch           " search as characters are entered
set hlsearch            " highlight matches
set number              " line numbers"
set autoindent
set autoread            " reload automatically a file if not changed
set magic               " For regex


" Airline Plugin
let g:airline_theme = 'bubblegum'
let g:airline#extensions#tabline#enabled = 1
set laststatus=2

" Tab spec
set tabstop=4
set expandtab
set shiftwidth=4

set ignorecase
set showmode            " Show the editing mode on last line
set t_Co=256
set encoding=utf-8

" Some remaps
noremap m l
noremap l k
noremap k j
noremap j h
noremap gV `[V`]

nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l
nnoremap <C-m> <C-w>m

" YouCompleteMe config File
let g:ycm_global_ycm_extra_conf = '~/.vim/.ycm_extra_conf.py'
" let g:ycm_confirm_extra_conf = 0

" Tweaking the 'super' button
let mapleader = "\<Space>"
nnoremap <Leader>o :CtrlP<CR>
nnoremap <Leader>w :w<CR>
nmap <Leader><Leader> V
vmap v <Plug>(expand_region_expand)
vmap <C-v> <Plug>(expand_region_shrink)
" Turn off highlight after search
nnoremap <Leader>a :noh<return><CR>

" Stupid window...
map q: :q
autocmd CompleteDone * pclose

" Search and replace : I can use
" /something to search it, then cs to replace
" then <Esc>, then n.n. etc. for repeating
vnoremap <silent> s //e<C-r>=&selection=='exclusive'?'+1':''<CR><CR>
    \:<C-u>call histdel('search',-1)<Bar>let @/=histget('search',-1)<CR>gv
omap s :normal vs<CR>

" pops Tagbar
nmap <F8> :TagbarToggle<CR>

filetype on
filetype plugin on
set backspace=indent,eol,start

"autocmd VimEnter * WatchForChanges
let autoreadargs={'autoread':1}
"execute WatchForChanges("*",autoreadargs)

" Color scheme
colorscheme ir_black
" completion highlight
highlight Pmenu ctermbg=4

" Maps Coquille commands to <F2> (Undo), <F3> (Next), <F4> (ToCursor)
au FileType coq call coquille#FNMapping()


"Python doc
nnoremap <buffer> K :<C-u>execute "!pydoc " . expand("<cword>")<CR>

"Python folding plugin : To be able to read doc
let g:SimpylFold_docstring_preview = 1

" vp doesn't replace paste buffer
function! RestoreRegister()
    let @" = s:restore_reg"
    return ''
endfunction
function! s:Repl()
    let s:restore_reg = @"
    return "p@=RestoreRegister()\<cr>"
endfunction
vmap <silent> <expr> p <sid>Repl()

" Using snipmate with YCM - not working yet
"let g:UltiSnipsExpandTrigger="<c-j>"
"let g:UltiSnipsJumpForwardTrigger="<c-j>"
"let g:UltiSnipsJumpBackwardTrigger="<c-k>"
